type Query {
  notifications: [Notification!]!
}

type Mutation {
  sendNotification(input: SendNotificationInput): Notification
}

directive @goModel(model: String, models: [String!]) on OBJECT
    | INPUT_OBJECT
    | SCALAR
    | ENUM
    | INTERFACE
    | UNION

directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on INPUT_FIELD_DEFINITION
    | FIELD_DEFINITION


  """
  TODO: localizization
        fuck localization 
  """

type Notification {
  id: ID!
  title: String!
  body: String!
  sent_at: String! 
  sent_by: User! @goField(forceResolver: true)
  target_audience: [NotificationTargetAudience!]!
  delivery_method: [NotificationDeliveryMethod!]!
}

enum NotificationDeliveryMethod {
  email
  mobile_push
}

enum NotificationTargetAudience {
  passengers
  drivers
}

input SendNotificationInput {
  title: String!
  body: String!
  target_audience: [NotificationTargetAudience!]!
  delivery_method: [NotificationDeliveryMethod!]!
}

type User {
  id: ID!
}
